{"version":3,"sources":["services/api.js","services/getIconStatus.js","services/getIconSpecies.js","components/CharacterCard.js","components/NotFound.js","components/CharacterList.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","components/CharacterDetail.js","services/local-storage.js","images/RickAndMorty.png","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","user","id","image","name","species","status","origin","episode","length","iconAlive","className","iconDead","iconUnknown","getIconStatus","toLowerCase","iconHuman","iconAlien","class","getIconSpecies","CharacterCard","props","to","element","src","alt","title","NotFound","filterName","CharacterList","character","characterElement","propsTypes","PropTypes","array","FilterByName","htmlFor","type","value","onChange","ev","handleFilter","target","key","FilterBySpecies","filterSpecies","Filters","action","onSubmit","preventDefault","CharacterDetail","ls","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","setCharacter","setFilterName","setFilterSpecies","useEffect","api","orderedData","sort","a","b","filteredCharacter","filter","includes","RickAndMorty","exact","path","render","propsId","routeUserId","match","params","foundUser","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7ac0aa07.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((user) => {\r\n        return {\r\n          id: user.id,\r\n          image: user.image,\r\n          name: user.name,\r\n          species: user.species,\r\n          status: user.status,\r\n          origin: user.origin.name,\r\n          episode: user.episode.length,\r\n        };\r\n      });\r\n      return cleanData;\r\n    });\r\n};\r\nexport default getApiData;\r\n","const iconAlive = <i className=\"fas fa-heartbeat\"></i>;\r\nconst iconDead = <i className=\"fas fa-dizzy\"></i>;\r\nconst iconUnknown = <i className=\"fas fa-question-circle\"></i>;\r\n\r\nconst getIconStatus = (status) => {\r\n  if (status.toLowerCase() === 'alive') {\r\n    return iconAlive;\r\n  } else if (status.toLowerCase() === 'dead') {\r\n    return iconDead;\r\n  } else {\r\n    return iconUnknown;\r\n  }\r\n};\r\n\r\nexport default getIconStatus;","const iconHuman = <i className=\"fas fa-user\"></i>;\r\nconst iconAlien = <i class=\"fas fa-hand-spock\"></i>;\r\n\r\nconst getIconSpecies = (species) => {\r\n  return species.toLowerCase() === \"human\" ? iconHuman : iconAlien;\r\n};\r\n\r\nexport default getIconSpecies;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getIconStatus from \"../services/getIconStatus\";\r\nimport getIconSpecies from \"../services/getIconSpecies\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`/character/${props.element.id}`}>\r\n      <div className=\"character__item\">\r\n        <img\r\n          className=\"character__item--image\"\r\n          src={props.element.image}\r\n          alt={`Foto de ${props.element.name}`}\r\n          title={`Foto de ${props.element.name}`}\r\n        />\r\n        <h4 className=\"character__item--title\">{props.element.name}</h4>\r\n        <p className=\"character__item--species\">{props.element.species}</p>\r\n        <div className=\"character__item--icons\">\r\n          <span>{getIconStatus(props.element.status)}</span>\r\n          <span>{getIconSpecies(props.element.species)}</span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n\r\nCharacterCard.propTypes = {\r\n  element: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n    photo: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <p>No hay ning√∫n personaje que coincida con el nombre {props.filterName}</p>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n\r\nNotFound.propTypes = {\r\n  filterName: PropTypes.array,\r\n}","import CharacterCard from \"./CharacterCard\";\r\nimport NotFound from \"./NotFound\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CharacterList(props) {\r\n  if (props.character.length === 0) {\r\n    return <NotFound filterName={props.filterName} />;\r\n  }\r\n  const characterElement = props.character.map((element) => {\r\n    return (\r\n      <li key={element.id} className=\"character__item\">\r\n        <CharacterCard element={element} />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n    \r\n        <ul\r\n          className='characters__list'\r\n        >\r\n          {characterElement}\r\n        </ul>\r\n  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterList;\r\n\r\nCharacterList.propsTypes = {\r\n  character: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"name\"></label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.filterName}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"species\">Especie:</label>\r\n\r\n      <select\r\n        name=\"species\"\r\n        id=\"species\"\r\n        value={props.filterSpecies}\r\n        onChange={handleChange}\r\n      >\r\n        <option className=\"option\" value=\"\">\r\n          Todos\r\n        </option>\r\n        <option className=\"option\" value=\"Human\">\r\n          Humano\r\n        </option>\r\n        <option className=\"option\" value=\"Alien\">\r\n          Alien\r\n        </option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecies;\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Filters(props) {\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section className=\"form-section\">\r\n      <form className=\"form\" action=\"\" onSubmit={handleForm}>\r\n        <FilterByName\r\n          filterName={props.filterName}\r\n          handleFilter={props.handleFilter}\r\n        />\r\n        <FilterBySpecies\r\n          filterSpecies={props.filterSpecies}\r\n          handleFilter={props.handleFilter}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  filterName: PropTypes.array,\r\n  handleFilter: PropTypes.func,\r\n  filterSpecies: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <div className=\"detail\">\r\n      <Link className=\"detail__return\" to=\"/\">\r\n      <i className=\"detail__return--icon fas fa-angle-left\"></i>Volver</Link>\r\n      <section className=\"detail__card\">\r\n        <img className=\"detail__card--photo\" src={props.user.image} alt={props.user.name} />\r\n       \r\n        <ul>\r\n          <li> <h4>{props.user.name}</h4></li>\r\n          <li>Status: {props.user.status}</li>\r\n          <li>Species: {props.user.species}</li>\r\n          <li>Origin: {props.user.origin}</li>\r\n          <li>Episodes: {props.user.episode}</li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n\r\nCharacterDetail.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    status: PropTypes.string,\r\n    origin: PropTypes.string,\r\n    episodes: PropTypes.number,\r\n    species: PropTypes.string,\r\n    photo: PropTypes.string,\r\n  }),\r\n};\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst ls = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default ls;\r\n","export default __webpack_public_path__ + \"static/media/RickAndMorty.de13d484.png\";","import { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport ls from \"../services/local-storage\";\nimport RickAndMorty from \"../images/RickAndMorty.png\";\nimport '../stylesheets/App.css';\n\nfunction App() {\n  const [character, setCharacter] = useState(ls.get(\"character\", []));\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\", \"\")\n  );\n\n  useEffect(() => {\n    api().then((data) => {\n      const orderedData = data.sort((a, b) =>\n        a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n      );\n      return setCharacter(orderedData);\n    });\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"character\", character);\n  }, [character]);\n\n  useEffect(() => {\n    ls.set(\"character\", character);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [character, filterName, filterSpecies]);\n\n  const renderCharacterDetail = (propsId) => {\n    const routeUserId = propsId.match.params.id;\n    const foundUser = character.find(\n      (user) => user.id === parseInt(routeUserId)\n    );\n    if (foundUser) {\n      return <CharacterDetail user={foundUser} />;\n    } else {\n      return <p>Personaje no encontrado</p>;\n    }\n  };\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecies(data.value);\n    }\n  };\n\n  const filteredCharacter = character\n    .filter((user) => {\n      return user.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((user) => {\n      if (filterSpecies === \"\") {\n        return true;\n      } else {\n        return user.species === filterSpecies;\n      }\n    });\n\n  return (\n    <>\n      <header className=\"page__header\">\n        <img\n          className=\"page__header--image\"\n          src={RickAndMorty}\n          alt=\"logo\"\n          title=\"logo\"\n        />\n      </header>\n      <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              filterName={filterName}\n              filterSpecies={filterSpecies}\n              handleFilter={handleFilter}\n            />\n            <CharacterList\n              character={filteredCharacter}\n              filterName={filterName}\n            />\n          </Route>\n          <Route path=\"/character/:id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n      <footer className=\"page__footer\">\n        <small>Macarena Gonz√°lez &copy; 2021</small>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}